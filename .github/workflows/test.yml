# testing all notebooks
name: Testing notebooks

on:
  - push

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.11', '3.12']
        notebook: [ Ch02-statlearn-lab.ipynb,
                    Ch03-linreg-lab.ipynb,
                    Ch04-classification-lab.ipynb,
                    Ch05-resample-lab.ipynb,
                    Ch06-varselect-lab.ipynb,
                    Ch07-nonlin-lab.ipynb,
                    Ch08-baggboost-lab.ipynb,
                    Ch09-svm-lab.ipynb,
                    Ch10-deeplearning-lab.ipynb,
                    Ch11-surv-lab.ipynb,
                    Ch12-unsup-lab.ipynb,
                    Ch13-multiple-lab.ipynb]
        exclude:
          - python-version: '3.11'
            notebook: Ch10-deeplearning-lab.ipynb

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        version: "0.5.15"


    - name: Set up Python
      shell: bash
      run: |
        uv python install ${{ matrix.python-version }}

    - name: Create venv
      shell: bash
      run: uv venv

    - name: Install requirements
      shell: bash
      run: |
        uv pip install --upgrade pip
        uv pip install -r requirements.txt
        uv pip install pytest nbmake

    - name: Create test configs
      shell: bash
      run: |
          #echo "from nbmake.pytest.plugin import *" > conftest.py
          echo "#Hello nbmake" > conftest.py
          cat >> conftest.py << 'EOF'
          import warnings
          import pytest

          @pytest.fixture(autouse=True)
          def configure_warnings():
              warnings.filterwarnings("always")
              with warnings.catch_warnings(record=True) as warning_list:
                  yield warning_list

          def pytest_runtest_call(item):
              warnings.simplefilter("always")
          EOF

    - name: Test
      shell: bash
      run: |
        PYTHONWARNINGS=always uv run pytest --nbmake --nbmake-timeout=3600 ${{ matrix.notebook }}
